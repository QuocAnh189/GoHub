definitions:
  dto.ForgotPasswordReq:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  dto.RefreshTokenReq:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  dto.ResetPasswordReq:
    properties:
      new_password:
        type: string
      password:
        type: string
    required:
    - new_password
    - password
    type: object
  dto.SignInReq:
    properties:
      identity:
        type: string
      password:
        type: string
    required:
    - identity
    - password
    type: object
  dto.SignUpReq:
    properties:
      email:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
      userName:
        type: string
    required:
    - email
    - password
    - phoneNumber
    - userName
    type: object
  dto.ValidateUserReq:
    properties:
      email:
        type: string
      phoneNumber:
        type: string
      userName:
        type: string
    required:
    - email
    - phoneNumber
    - userName
    type: object
  response.Response:
    properties:
      data: {}
      error: {}
    type: object
info:
  contact:
    email: anhquoctpdev@gmail.com
    name: Tran Phuoc Anh Quoc
  description: Swagger API for EventHub.
  license:
    name: MIT
    url: https://github.com/MartinHeinz/go-project-blueprint/blob/master/LICENSE
  termsOfService: http://swagger.io/terms/
  title: EventHub (GoHub) Swagger API
  version: OAS 3.0
paths:
  //api/v1/conversations/{conversationId}/messages/{messageId}:
    patch:
      description: Deletes the category with the specified ID.
      produces:
      - application/json
      responses:
        "200":
          description: Category updated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Category with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete a message
      tags:
      - Categories
  /api/v1/auth/external-auth-callback:
    get:
      description: Handles the callback from an external authentication provider and
        processes the authentication result.
      parameters:
      - description: Redirect URL after authentication
        in: query
        name: returnUrl
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Invalid user credentials or request data
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Callback endpoint for external authentication
      tags:
      - Auth
  /api/v1/auth/external-login:
    post:
      description: Authenticates the user using an external authentication provider
        (e.g., Google, Facebook) and returns a login response if successful.
      parameters:
      - description: Authentication provider
        in: query
        name: provider
        required: true
        type: string
      - description: Redirect URL after authentication
        in: query
        name: returnUrl
        required: true
        type: string
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Signin a new user with external credentials
      tags:
      - Auth
  /api/v1/auth/forgot-password:
    post:
      description: Sends a password recovery email to the user based on the provided
        email address.
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/dto.ForgotPasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: Password recovery email sent successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - Invalid or missing credentials
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User with the provided email address not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Initiate password recovery
      tags:
      - Auth
  /api/v1/auth/profile:
    get:
      description: Fetches the details of the currently authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve user profile
      tags:
      - Auth
  /api/v1/auth/refresh-token:
    post:
      description: Refreshes the user's authentication token based on the provided
        refresh token credentials.
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/dto.RefreshTokenReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully refreshed the token
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - Invalid or expired refresh token
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Refresh user authentication token
      tags:
      - Auth
  /api/v1/auth/reset-password:
    post:
      description: Resets the user's password based on the provided credentials and
        reset information.
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/dto.ResetPasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request - Invalid input or parameters
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - Invalid or expired credentials
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User or resource not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Reset user password
      tags:
      - Auth
  /api/v1/auth/signin:
    post:
      description: Authenticates the user based on the provided credentials and returns
        a sign-in response if successful.
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/dto.SignInReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully signed in
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - Invalid credentials
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Signin a user
      tags:
      - Auth
  /api/v1/auth/signout:
    post:
      description: Signs out the current user, invalidating their session or authentication
        token.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully signed out
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Signout a new user
      tags:
      - Auth
  /api/v1/auth/signup:
    post:
      description: Registers a new user with the provided details. Returns a sign-in
        response upon successful registration.
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/dto.SignUpReq'
      produces:
      - application/json
      responses:
        "200":
          description: User successfully registered
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid user input
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Signup a new user
      tags:
      - Auth
  /api/v1/auth/validate-user:
    post:
      description: Validate user information session one when signup
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/dto.ValidateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: User credentials are valid
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid user credentials or request data
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Validate user credentials
      tags:
      - Auth
  /api/v1/categories:
    delete:
      description: Deletes the category with the specified ID.
      produces:
      - application/json
      responses:
        "200":
          description: Category updated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Category with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete a categories
      tags:
      - Categories
    get:
      description: Fetches a paginated list of categories based on the provided filter
        parameters.
      produces:
      - application/json
      responses:
        "200":
          description: Category created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a list of categories
      tags:
      - Categories
    post:
      description: Creates a new category based on the provided details. The request
        must include multipart form data.
      produces:
      - application/json
      responses:
        "201":
          description: Category created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new category
      tags:
      - Categories
  /api/v1/categories/{categoryId}:
    delete:
      description: Deletes the category with the specified ID.
      produces:
      - application/json
      responses:
        "200":
          description: Category updated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Category with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete a category
      tags:
      - Categories
    get:
      description: Fetches the details of a specific category based on the provided
        category ID.
      produces:
      - application/json
      responses:
        "200":
          description: Category created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Category with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a category by its ID
      tags:
      - Categories
    put:
      description: Updates the details of an existing category based on the provided
        category ID and update information.
      produces:
      - application/json
      responses:
        "200":
          description: Category updated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Category with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update an existing coupon
      tags:
      - Categories
  /api/v1/categories/restore:
    patch:
      description: Deletes the category with the specified ID.
      produces:
      - application/json
      responses:
        "200":
          description: Restore category successfully
          schema:
            type: string
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Category with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Restore a categories
      tags:
      - Categories
  /api/v1/commands/get-in-function/{functionId}:
    get:
      description: Fetches a list of commands that are associated with the specified
        function ID.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of commands
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve commands associated with specific function
      tags:
      - Commands
  /api/v1/commands/get-not-in-function/{functionId}:
    get:
      description: Fetches a list of commands that are not associated with the specified
        function ID.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of commands
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve commands not associated with a specific function
      tags:
      - Commands
  /api/v1/conversations/{conversationId}/messages:
    get:
      description: Fetches a paginated list of messages created by the conversation,
        based on the provided pagination filter.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of messages
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieves a list of messages by the conversation
      tags:
      - Conversations
    post:
      description: Fetches a paginated list of messages created by the conversation,
        based on the provided pagination filter.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of messages
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create message in conversation
      tags:
      - Conversations
  /api/v1/conversations/{conversationId}/messages/{messageId}:
    patch:
      description: Updates the details of an existing category based on the provided
        category ID and update information.
      produces:
      - application/json
      responses:
        "200":
          description: Category updated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Category with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update an existing message
      tags:
      - Categories
  /api/v1/conversations/get-by-organizer/{organizerId}:
    get:
      description: Fetches a paginated list of conversations created by the event,
        based on the provided pagination filter.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of conversations
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieves a list of conversations by the event
      tags:
      - Conversations
  /api/v1/conversations/get-by-user/{userId}:
    get:
      description: Fetches a paginated list of conversations created by the user,
        based on the provided pagination filter.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of conversations
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieves a list of conversations by the user
      tags:
      - Conversations
  /api/v1/coupons:
    get:
      description: Fetches the details of a specific category based on the provided
        category ID.
      produces:
      - application/json
      responses:
        "200":
          description: Category created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Category with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a coupons
      tags:
      - Coupons
    post:
      description: Fetches the details of a specific category based on the provided
        category ID.
      produces:
      - application/json
      responses:
        "200":
          description: Category created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Category with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new coupon
      tags:
      - Coupons
  /api/v1/coupons/{couponId}:
    delete:
      description: Fetches the details of a specific category based on the provided
        category ID.
      produces:
      - application/json
      responses:
        "200":
          description: Category created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Category with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete coupon
      tags:
      - Coupons
    get:
      description: Fetches the details of a specific category based on the provided
        category ID.
      produces:
      - application/json
      responses:
        "200":
          description: Category created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Category with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a coupon by its ID
      tags:
      - Coupons
    patch:
      description: Fetches the details of a specific category based on the provided
        category ID.
      produces:
      - application/json
      responses:
        "200":
          description: Category created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Category with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update coupon
      tags:
      - Coupons
  /api/v1/coupons/get-created-coupons:
    get:
      description: Fetches the details of a specific category based on the provided
        category ID.
      produces:
      - application/json
      responses:
        "200":
          description: Category created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Category with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a coupons by created
      tags:
      - Categories
  /api/v1/events:
    get:
      description: Fetches a paginated list of events based on the provided filter
        parameters.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of events
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a list of events
      tags:
      - Events
    post:
      description: Creates a new event with the provided details.
      produces:
      - application/json
      responses:
        "200":
          description: Event created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: BadRequest - Invalid input or request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new event
      tags:
      - Events
  /api/v1/events/{eventId}:
    delete:
      description: Deletes an existing event based on the provided event ID.
      produces:
      - application/json
      responses:
        "200":
          description: Events deleted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete an existing multiple event
      tags:
      - Events
    get:
      description: Fetches the details of a specific event based on the provided event
        ID.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the event
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a event by its ID
      tags:
      - Events
    put:
      description: Updates the details of an existing event based on the provided
        event ID and update information.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the event
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update an existing event
      tags:
      - Events
  /api/v1/events/apply-coupons/{eventId}:
    patch:
      description: Changes the visibility of specified events to public based on the
        provided event IDs.
      produces:
      - application/json
      responses:
        "200":
          description: Events marked as public successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Apply Coupons for event
      tags:
      - Events
  /api/v1/events/favourite/{eventId}:
    patch:
      description: Marks an existing event as a favourite based on the provided event
        ID.
      produces:
      - application/json
      responses:
        "200":
          description: Event marked as favourite successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: BadRequest - Invalid request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Mark anb event as favorite
      tags:
      - Events
  /api/v1/events/get-created-events:
    get:
      description: Fetches a paginated list of events created by the user, based on
        the provided pagination filter.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved events
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve created events
      tags:
      - Events
  /api/v1/events/get-delete-events:
    get:
      description: Fetches a paginated list of events that have been deleted, based
        on the provided pagination filter.
      produces:
      - application/json
      responses:
        "200":
          description: Event permanently deleted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve deleted events
      tags:
      - Events
  /api/v1/events/get-favourite-events:
    get:
      description: Fetches a paginated list of events marked as favourites by the
        user, based on the provided pagination filter.
      produces:
      - application/json
      responses:
        "200":
          description: Event marked as favourite successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: BadRequest - Invalid request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve favourite events
      tags:
      - Events
  /api/v1/events/make-events-private:
    patch:
      description: Changes the visibility of specified events to private based on
        the provided event IDs.
      produces:
      - application/json
      responses:
        "200":
          description: Events marked as private successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Make events private
      tags:
      - Events
  /api/v1/events/make-events-public:
    patch:
      description: Changes the visibility of specified events to public based on the
        provided event IDs.
      produces:
      - application/json
      responses:
        "200":
          description: Events marked as public successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Make events public
      tags:
      - Events
  /api/v1/events/remove-coupons/{eventId}:
    patch:
      description: Changes the visibility of specified events to public based on the
        provided event IDs.
      produces:
      - application/json
      responses:
        "200":
          description: Events marked as public successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Remove Coupons from event
      tags:
      - Events
  /api/v1/events/restore:
    patch:
      description: Restores a list of deleted events based on the provided event IDs.
      produces:
      - application/json
      responses:
        "200":
          description: Event permanently deleted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Restore deleted events
      tags:
      - Events
  /api/v1/events/unfavourite/{eventId}:
    patch:
      description: Removes an event from the user's favourites based on the provided
        event ID.
      produces:
      - application/json
      responses:
        "200":
          description: Event marked as favourite successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: BadRequest - Invalid request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: UnMark anb event as favorite
      tags:
      - Events
  /api/v1/functions:
    get:
      description: Fetches a list of all available functions.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of functions
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - Function not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - Function does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a list of functions
      tags:
      - Functions
    post:
      description: Creates a new function based on the provided details.
      produces:
      - application/json
      responses:
        "201":
          description: Function created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - Function not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - Function does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new function
      tags:
      - Functions
  /api/v1/functions/{functionId}:
    delete:
      description: Deletes the function with the specified ID.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of functions
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - Function not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - Function does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Function with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete a function
      tags:
      - Functions
    get:
      description: Fetches the details of a specific function based on the provided
        function ID.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of functions
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - Function not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - Function does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Function with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a function by its ID
      tags:
      - Functions
    put:
      description: Updates the details of an existing function based on the provided
        function ID and update information.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of functions
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - Function not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - Function does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Function with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update an existing function
      tags:
      - Functions
  /api/v1/functions/{functionId}/disable-command/{commandId}:
    post:
      description: Disables a specific command for the function identified by the
        function ID.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of functions
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - Function not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - Function does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Function with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Disable command for a function
      tags:
      - Functions
  /api/v1/functions/{functionId}/enable-command/{commandId}:
    post:
      description: Enables a specific command for the function identified by the function
        ID.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of functions
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request - Invalid input or request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - Function not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - Function does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Function with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Enable a command for a function
      tags:
      - Functions
  /api/v1/permissions:
    get:
      description: Fetches a list of all permissions associated with the specified
        function ID.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of permissions
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve all permissions for a function
      tags:
      - Permissions
  /api/v1/permissions/get-by-user/{userId}:
    get:
      description: Fetches a list of permissions by user id.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of permissions
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve permissions by user
      tags:
      - Permissions
  /api/v1/permissions/roles:
    get:
      description: Fetches a list of permissions categorized by roles.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of permissions
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve permissions categorized by roles
      tags:
      - Permissions
  /api/v1/reviews:
    get:
      description: Fetches a paginated list of reviews based on the provided filter
        parameters.
      produces:
      - application/json
      responses:
        "202":
          description: Successfully retrieved the list of reviews
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a list of reviews
      tags:
      - Reviews
    post:
      description: Creates a new review based on the provided details.
      produces:
      - application/json
      responses:
        "201":
          description: Review created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new review
      tags:
      - Reviews
  /api/v1/reviews/{reviewId}:
    delete:
      description: Deletes the review with the specified ID.
      produces:
      - application/json
      responses:
        "200":
          description: Review deleted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete a review
      tags:
      - Reviews
    get:
      description: Fetches the details of a specific review based on the provided
        review ID.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the review
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a reviews by its ID
      tags:
      - Reviews
    patch:
      description: Updates the details of an existing review based on the provided
        review ID and update information.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the review
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update an existing review
      tags:
      - Reviews
  /api/v1/reviews/get-by-event/{eventId}:
    get:
      description: Fetches a paginated list of reviews created by the event, based
        on the provided pagination filter.
      produces:
      - application/json
      responses:
        "202":
          description: Successfully retrieved the list of reviews
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a list of reviews by event
      tags:
      - Reviews
  /api/v1/reviews/get-by-user/{userId}:
    get:
      description: Fetches a paginated list of reviews created by the user, based
        on the provided pagination filter.
      produces:
      - application/json
      responses:
        "202":
          description: Successfully retrieved the list of reviews
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a list of reviews by user
      tags:
      - Reviews
  /api/v1/roles/{roleId}/add-function/{functionId}:
    post:
      description: Adds a specific function to the role identified by the role ID.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of users
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request - Invalid input or request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Role or function with the specified IDs not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add a function to a role
      tags:
      - Roles
  /api/v1/roles/{roleId}/remove-function/{functionId}:
    post:
      description: Removes a specific function from the role identified by the role
        ID.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of users
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request - Invalid input or request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Role or function with the specified IDs not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Remove a function from a role
      tags:
      - Roles
  /api/v1/users:
    get:
      description: Fetches a paginated list of users based on the provided filter
        parameters.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of users
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a list of users
      tags:
      - Users
    post:
      description: Creates a new user based on the provided details. The request must
        include multipart form data.
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: BadRequest - Invalid input or request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new user
      tags:
      - Users
  /api/v1/users/{userId}:
    get:
      description: Successfully retrieved the user
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the user
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a user by its ID
      tags:
      - Users
    put:
      description: Updates the details of an existing user based on the provided user
        ID and update information.
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: BadRequest - Invalid input or request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update an existing user
      tags:
      - Users
  /api/v1/users/{userId}/change-password:
    patch:
      description: Changes the password of an existing user based on the provided
        user ID and new password information.
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: BadRequest - Invalid input or request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Change a user's password
      tags:
      - Users
  /api/v1/users/{userId}/followers:
    get:
      description: Fetches a paginated list of followers based on the provided user
        ID and filter parameters.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of followers
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: BadRequest - Invalid input or request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a list of a user by its ID
      tags:
      - Users
  /api/v1/users/{userId}/following-users:
    get:
      description: Fetches a paginated list of following users based on the provided
        user ID and filter parameters.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of following users
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: BadRequest - Invalid input or request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a list of a user by its ID
      tags:
      - Users
  /api/v1/users/follow/{followedUserId}:
    patch:
      description: Allows the authenticated user to follow another user by specifying
        the followed user's ID.
      produces:
      - application/json
      responses:
        "200":
          description: User followed successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: BadRequest - Invalid input or request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Follow a user
      tags:
      - Users
  /api/v1/users/unfollow/{followedUserId}:
    patch:
      description: Allows the authenticated user to follow another user by specifying
        the followed user's ID.
      produces:
      - application/json
      responses:
        "200":
          description: User followed successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: BadRequest - Invalid input or request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: UnFollow a user
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
