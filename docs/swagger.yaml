definitions:
  dto.ForgotPasswordReq:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  dto.RefreshTokenReq:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  dto.ResetPasswordReq:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  dto.SignInReq:
    properties:
      identity:
        type: string
      password:
        type: string
    required:
    - identity
    - password
    type: object
  dto.SignUpReq:
    properties:
      email:
        type: string
      fullName:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
      userName:
        type: string
    required:
    - email
    - fullName
    - password
    - phoneNumber
    - userName
    type: object
  dto.ValidateUserReq:
    properties:
      email:
        type: string
      fullName:
        type: string
      phone_number:
        type: string
    required:
    - email
    - fullName
    - phone_number
    type: object
  response.Response:
    properties:
      data: {}
      error: {}
    type: object
info:
  contact:
    email: anhquoctpdev@gmail.com
    name: Tran Phuoc Anh Quoc
  description: Swagger API for EventHub.
  license:
    name: MIT
    url: https://github.com/MartinHeinz/go-project-blueprint/blob/master/LICENSE
  termsOfService: http://swagger.io/terms/
  title: EventHub (GoHub) Swagger API
  version: OAS 3.0
paths:
  /api/v1/auth/external-auth-callback:
    get:
      description: Handles the callback from an external authentication provider and
        processes the authentication result.
      parameters:
      - description: Redirect URL after authentication
        in: query
        name: returnUrl
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Invalid user credentials or request data
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Callback endpoint for external authentication
      tags:
      - Auth
  /api/v1/auth/external-login:
    post:
      description: Authenticates the user using an external authentication provider
        (e.g., Google, Facebook) and returns a login response if successful.
      parameters:
      - description: Authentication provider
        in: query
        name: provider
        required: true
        type: string
      - description: Redirect URL after authentication
        in: query
        name: returnUrl
        required: true
        type: string
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Signin a new user with external credentials
      tags:
      - Auth
  /api/v1/auth/forgot-password:
    post:
      description: Sends a password recovery email to the user based on the provided
        email address.
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/dto.ForgotPasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: Password recovery email sent successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - Invalid or missing credentials
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User with the provided email address not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Initiate password recovery
      tags:
      - Auth
  /api/v1/auth/profile:
    get:
      description: Fetches the details of the currently authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve user profile
      tags:
      - Auth
  /api/v1/auth/refresh-token:
    post:
      description: Refreshes the user's authentication token based on the provided
        refresh token credentials.
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/dto.RefreshTokenReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully refreshed the token
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - Invalid or expired refresh token
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Refresh user authentication token
      tags:
      - Auth
  /api/v1/auth/reset-password:
    post:
      description: Resets the user's password based on the provided credentials and
        reset information.
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/dto.ResetPasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request - Invalid input or parameters
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - Invalid or expired credentials
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User or resource not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Reset user password
      tags:
      - Auth
  /api/v1/auth/signin:
    post:
      description: Authenticates the user based on the provided credentials and returns
        a sign-in response if successful.
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/dto.SignInReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully signed in
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - Invalid credentials
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Signin a user
      tags:
      - Auth
  /api/v1/auth/signout:
    post:
      description: Signs out the current user, invalidating their session or authentication
        token.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully signed out
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Signout a new user
      tags:
      - Auth
  /api/v1/auth/signup:
    post:
      description: Registers a new user with the provided details. Returns a sign-in
        response upon successful registration.
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/dto.SignUpReq'
      produces:
      - application/json
      responses:
        "200":
          description: User successfully registered
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid user input
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Signup a new user
      tags:
      - Auth
  /api/v1/auth/validate-user:
    post:
      description: Validate user information session one when signup
      parameters:
      - description: Body
        in: body
        name: _
        required: true
        schema:
          $ref: '#/definitions/dto.ValidateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: User credentials are valid
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid user credentials or request data
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Validate user credentials
      tags:
      - Auth
  /api/v1/reviews:
    get:
      description: Fetches a paginated list of reviews based on the provided filter
        parameters.
      produces:
      - application/json
      responses:
        "202":
          description: Successfully retrieved the list of reviews
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a list of reviews
      tags:
      - Reviews
    post:
      description: Creates a new review based on the provided details.
      produces:
      - application/json
      responses:
        "201":
          description: Review created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new review
      tags:
      - Reviews
  /api/v1/reviews/{reviewId}:
    delete:
      description: Deletes the review with the specified ID.
      produces:
      - application/json
      responses:
        "200":
          description: Review deleted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete a review
      tags:
      - Reviews
    get:
      description: Fetches the details of a specific review based on the provided
        review ID.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the review
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a reviews by its ID
      tags:
      - Reviews
    patch:
      description: Updates the details of an existing review based on the provided
        review ID and update information.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the review
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update an existing review
      tags:
      - Reviews
  /api/v1/reviews/get-by-event/{eventId}:
    get:
      description: Fetches a paginated list of reviews created by the event, based
        on the provided pagination filter.
      produces:
      - application/json
      responses:
        "202":
          description: Successfully retrieved the list of reviews
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a list of reviews by event
      tags:
      - Reviews
  /api/v1/reviews/get-by-user/{userId}:
    get:
      description: Fetches a paginated list of reviews created by the user, based
        on the provided pagination filter.
      produces:
      - application/json
      responses:
        "202":
          description: Successfully retrieved the list of reviews
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - Event with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a list of reviews by user
      tags:
      - Reviews
  /api/v1/users:
    get:
      description: Fetches a paginated list of users based on the provided filter
        parameters.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of users
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a list of users
      tags:
      - Users
    post:
      description: Creates a new user based on the provided details. The request must
        include multipart form data.
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: BadRequest - Invalid input or request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new user
      tags:
      - Users
  /api/v1/users/{userId}:
    get:
      description: Successfully retrieved the user
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the user
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a user by its ID
      tags:
      - Users
    put:
      description: Updates the details of an existing user based on the provided user
        ID and update information.
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: BadRequest - Invalid input or request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update an existing user
      tags:
      - Users
  /api/v1/users/{userId}/change-password:
    patch:
      description: Changes the password of an existing user based on the provided
        user ID and new password information.
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: BadRequest - Invalid input or request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Change a user's password
      tags:
      - Users
  /api/v1/users/{userId}/followers:
    get:
      description: Fetches a paginated list of followers based on the provided user
        ID and filter parameters.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of followers
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: BadRequest - Invalid input or request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a list of a user by its ID
      tags:
      - Users
  /api/v1/users/{userId}/following-users:
    get:
      description: Fetches a paginated list of following users based on the provided
        user ID and filter parameters.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of following users
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: BadRequest - Invalid input or request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a list of a user by its ID
      tags:
      - Users
  /api/v1/users/follow/{followedUserId}:
    patch:
      description: Allows the authenticated user to follow another user by specifying
        the followed user's ID.
      produces:
      - application/json
      responses:
        "200":
          description: User followed successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: BadRequest - Invalid input or request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Follow a user
      tags:
      - Users
  /api/v1/users/unfollow/{followedUserId}:
    patch:
      description: Allows the authenticated user to follow another user by specifying
        the followed user's ID.
      produces:
      - application/json
      responses:
        "200":
          description: User followed successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: BadRequest - Invalid input or request data
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Forbidden - User does not have the required permissions
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found - User with the specified ID not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error - An error occurred while processing
            the request
          schema:
            $ref: '#/definitions/response.Response'
      summary: UnFollow a user
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
